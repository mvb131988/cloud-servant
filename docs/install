########################################################################################################
### Pi setup
########################################################################################################

(1) Install RASPBIAN Os on SD card. Use Etcher only(command line tools don't write image correct)
(2) Enable ssh (by default disabled) 

sudo service ssh start
	
	default username: pi
	standard password
	
(3) Change pi password(by default raspberry)

	Connect to raspberry via ssh and use command passwd in terminal:
	passwd

(4) Change ssh port (on default 22 port would come lots of the external requests,
somebody tries to break through ssh security);
	
	1. sudo nano /etc/ssh/sshd_config
	2. Uncomment #Port and set 51313
	3. sudo /etc/init.d/ssh restart
	        service ssh restart 
	4. ssh pi@192.168.0.13 -p 51313

(5) Optional:
	Connecting to wifi
	(1)	Check wlan0 exists
		iwconfig
	(2) Start interface	
		sudo ifconfig wlan0 up
	(3) Get list of available networks	
		sudo iwlist wlan0 scan
	(4)	Install wpasupplicant
		sudo apt-get install wpasupplicant
	(5) Create or edit /etc/wpa_supplicant/wpa_supplicant.conf 
		sudo nano wpa_supplicant.conf
		------------------------------------
		file content(get network name from 3)
		------------------------------------
		network={
		    ssid="network_name"
		    psk="network_pas"
		}
		------------------------------------
	(6) Run and check there is wext driver 
		wpa_supplicant -h
	(7) Intialize wpa_supplicant and connect to the network in(5)
		sudo wpa_supplicant -B -i wlan0 -c /etc/wpa_supplicant/wpa_supplicant.conf -D wext
		sudo dhclient wlan0
	
	Optional: To disconnect from the network
	sudo killall wpa_supplicant


(6) In local network assign static ip(bind by MAC address) to raspberry
(192.168.0.13 or 192.168.0.31)

To find auto assigned ip address use: for /l %i in (1,1,254) do @ping 192.168.0.%i -n 1 -w 100 | find "Reply"
To find MAC on raspberry node use: ifconfig(ether address)

(7) Configure port forwarding on the router. Necessary for external ssh access(port 22) as well as for 
application communication(port from app configuration)

Ports:
	- 22222 communication between nodes
	- 51313 ssh control
	- 53131 web interface port(part of cloud-servant-view), no need to configure here

(8) Logs location:
	/var/log/auth.log (grep "Failed" /var/log/auth.log)

(9) Copy files from remote to local
	scp -r -P 51313 pi@92.115.183.17:/media/pi/seagate/repo/.log /d/temp/remote_logs
	
	scp -r -P 51313 pi@95.65.61.110:/media/pi/seagate/repo/.log/app.log /c/endava/temp/95.65.61.110/
	
Node list (assuming ips are static):
(1) 92.115.183.17
(2)	95.65.61.110

########################################################################################################
### Environment configuration
########################################################################################################

(1) cd ~/Downloads/

(2) Download jdk 8u151
!!!Desktop x64 only
wget --no-check-certificate -c --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/8u151-b12/e758a0de34e24606bca991d704f6dcbf/jdk-8u151-linux-x64.tar.gz

!!!ARM 32 bit version for raspberry
wget --no-check-certificate -c --header "Cookie: oraclelicense=accept-securebackup-cookie" https://download.oracle.com/otn-pub/java/jdk/8u191-b12/2787e4a523244c269598db4e85c51e0c/jdk-8u191-linux-arm32-vfp-hflt.tar.gz

(3) Extract
tar -xvzf jdk-8u191-linux-x64.tar.gz

(4) Copy to /usr/java

from /usr
sudo mkdir java

from ~/Downloads
sudo cp -R jdk1.8.0_191/ /usr/java/
sudo rm -R jdk1.8.0_191

(5) Add JAVA_HOME and modifythe PATH (after logout)
from /etc

sudo nano environment
Example:
JAVA_HOME="/usr/java/jdk1.8.0_191"

sudo nano profile 
PATH="/usr/java/jdk1.8.0_191/bin:[existed path]" (first entry in the PATH to override other installed JDKs)

restart with:
sudo reboot

(6) Download maven

cd ~/Downloads/

wget "https://www-eu.apache.org/dist/maven/maven-3/3.6.0/binaries/apache-maven-3.6.0-bin.tar.gz"

(7) Extract
tar -xvzf apache-maven-3.6.0-bin.tar.gz

(8) Copy to /usr/maven

from /usr
sudo mkdir /usr/maven

from ~/Downloads
sudo cp -R apache-maven-3.6.0/ /usr/maven/
sudo rm -R apache-maven-3.6.0

(9) Add MAVEN_HOME and modify the PATH (after logout) (save ctrl+O; exit ctrl+X)
from /etc

sudo nano environment 
Example:
MAVEN_HOME="/usr/maven/apache-maven-3.6.0"

sudo nano profile 
PATH="/usr/maven/apache-maven-3.5.2/bin:/usr/java/jdk1.8.0_151/bin:[existed path]"

(10) Install git
sudo apt-get install git

(11) Checkout
from ~/workspace

git clone https://github.com/mvb131988/cloud-servant.git

(12) Set slave repository paths:
In pom.xml set:
	- root /media/pi/seagate/repo
	- log /media/pi/seagate/repo/.log
	
(13) Copy .jar to /usr/cloud-servant
sudo chown -R pi:1000 /usr/cloud-servant
scp -P 51313 cloud-servant.jar pi@92.115.183.17:/usr/cloud-servant
scp -P 51313 cloud-servant.jar pi@95.65.61.110:/usr/cloud-servant

Run in background. Don't close on session disconnection
nohup java -jar cloud-servant.jar start >/dev/null &
	
########################################################################################################
###	External storage
########################################################################################################

The default NTFS driver only supports read access.
In order to be able to write to NTFS you need to install the ntfs-3g driver (which is a bit slower).

	sudo apt-get update
	sudo apt-get -y install ntfs-3g
	
To ALWAYS mount external hard drive to the same location
	1. sudo mkdir /media/pi/seagate	
	2. sudo chown -R pi:1000 /media/pi/seagate (check /etc/passwd file to find user group)
	3. sudo nano /etc/fstab
	   /dev/sda1 /media/pi/seagate ntfs uid=pi,gid=1000,rw,nosuid,nodev,default_permissions 0 0 (add this line)
	4. sudo reboot
	
########################################################################################################
###	Create Windows job(Win7) Automatic start on system startup
########################################################################################################

(1) Windows -> Search ("schedule") open Task Scheduler

(2) Create task

	General: Mark "Run whether user is logged on or not"
	Triggers: Mark "At system startup"
	Actions: Set "Start a program" and path to batch 
	
(3) !!! stop.bat doesn't work, because jps -v doesn't display process information

(4) Check&set permissions on .log directory and also on cloud_servant.jar and launch.bat

########################################################################################################


########################################################################################################
###	Create Linux job(using systemd) Automatic start on system startup
########################################################################################################

(1) Move to /lib/systemd/system

(2) Copy cloud-servant.service into

scp -P 51313 cloud-servant.service pi@<ip>:/usr/cloud-servant
then
sudo cp /usr/cloud-servant/cloud-servant.service /lib/systemd/system

(3) Adjust ExecStart:
	- set correct full java path
	- set correct full cloud-servant path
	
(4) Start as service:
	
	sudo systemctl enable cloud-servant.service
	sudo systemctl start cloud-servant.service
	
	To check servcie status:
	
	sudo systemctl status cloud-servant.service
	
	
########################################################################################################
### FTP server setup
########################################################################################################

https://www.raspberrypi.org/documentation/remote-access/ftp.md

Note: it's very slow

(1) sudo apt-get install pure-ftpd

(2) sudo groupadd ftpgroup
	sudo useradd ftpuser -g ftpgroup -s /sbin/nologin -d /dev/null

(3) Virtual user(why?) 	
	sudo pure-pw useradd ftpuser1 -u ftpuser -g ftpgroup -d /media/pi/seagate/repo -m
	standard password
	
(4)	sudo pure-pw mkdb
	sudo ln -s /etc/pure-ftpd/conf/PureDB /etc/pure-ftpd/auth/60puredb
	sudo service pure-ftpd restart
	
access ftp://192.168.0.13/

########################################################################################################
### Recently find issue
########################################################################################################

On windows after an update raspberry pi nodes are unable to ping windows/PC node. 
The issue looks like: from raspberry pi node it's impossible to ping windows/PC node.
					  However the error isn't 'host unreachable', instead it gets 'packet loss 100%'
This happens because windows firewall configuration	(see firewall configuration for private networks)	

########################################################################################################
### Install procedure
########################################################################################################			  
(1) compile_slave.bat
(2) from target:
	scp -P 51313 cloud-servant.jar pi@92.115.183.17:/usr/cloud-servant
	scp -P 51313 cloud-servant.jar pi@95.65.61.110:/usr/cloud-servant
(3) ssh pi@92.115.183.17 -p 51313		
	ssh pi@95.65.61.110 -p 51313
(4) htop
	kill cloud-servant process if there is running one
(5) cd /usr/cloud-servant/
(6) sudo reboot	
	or
	nohup java -jar cloud-servant.jar start >/dev/null &